const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const cron = require('node-cron');

require('dotenv').config();

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
const BOT_TOKEN = process.env.BOT_TOKEN;
const CHANNEL_ID = process.env.CHANNEL_ID;
const NEWS_API_KEY = process.env.NEWS_API_KEY;

const bot = new TelegramBot(BOT_TOKEN, { polling: true });

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
async function translateText(text, targetLang = 'ru') {
    try {
        const response = await axios.get('https://api.mymemory.translated.net/get', {
            params: {
                q: text,
                langpair: `en|${targetLang}`
            }
        });

        return response.data.responseData.translatedText;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ:', error.response?.data || error.message);
        return text; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª, –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
async function getNews() {
    try {
        const response = await axios.get('https://newsapi.org/v2/top-headlines', {
            params: {
                category: 'general',
                language: 'en',
                apiKey: NEWS_API_KEY
            }
        });

        const articles = response.data.articles;
        if (!articles.length) {
            console.log('–ù–µ—Ç —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.');
            return null;
        }

        // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –Ω–æ–≤–æ—Å—Ç—å
        const news = articles[0];

        // –ü–µ—Ä–µ–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
        const title = await translateText(news.title);
        const description = news.description ? await translateText(news.description) : '';

        return `üì∞ *${title}*\n\n${description}\n[–ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ](${news.url})`;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –∫–∞–Ω–∞–ª
async function sendNewsToChannel() {
    const news = await getNews();
    if (news) {
        await bot.sendMessage(CHANNEL_ID, news, { parse_mode: 'Markdown' });
        console.log('–ù–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    } else {
        console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å.');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π –∫–∞–∂–¥—ã–π —á–∞—Å
cron.schedule('0 * * * *', () => {
    console.log('–ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π...');
    sendNewsToChannel();
});

// –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ API –∫–ª—é—á –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π:');
    
    bot.once('message', async (msg) => {
        const apiKey = msg.text;
        process.env.NEWS_API_KEY = apiKey;
        bot.sendMessage(chatId, 'API –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω—ë–Ω! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ ID –∫–∞–Ω–∞–ª–∞:');

        bot.once('message', async (msg) => {
            const channelId = msg.text;
            process.env.CHANNEL_ID = channelId;
            bot.sendMessage(chatId, 'ID –∫–∞–Ω–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω! –ë–æ—Ç –≥–æ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤–æ—Å—Ç–∏.');
        });
    });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞
sendNewsToChannel();
